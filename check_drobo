#! /usr/bin/python
#
# Check a few things about a Drobo and return a Nagios-compliant status
#
# This needs to be run with root priviledges.  You might like to put something
# like the following in /etc/sudoers:
# 
#    nagios ALL=(ALL) NOPASSWD: <pathname>/check_drobo
#
# Install drobo-utils package, and that will give you the python libraries.
#  Much of this is copied from 'drobom'

import sys 
from optparse import OptionParser

def togig(b):
    return b/(1024.0*1024*1024)

def return_OK(info,data=""):
    print "DROBO OK: %s|%s" % (info, data)
    sys.exit(0)

def return_WARNING(info,data=""):
    print "DROBO WARNING: %s|%s" % (info, data)
    sys.exit(1)

def return_CRITICAL(info,data=""):
    print "DROBO CRITICAL: %s|%s" % (info, data)
    sys.exit(2)

def return_UNKNOWN(info,data=""):
    print "DROBO UNKNOWN: %s|%s" % (info, data)
    sys.exit(3)

parser = OptionParser()

import Drobo
l = Drobo.DiscoverLUNs()
# We just use the first drobo we see
d = Drobo.Drobo(l[0])

# Look at capacity
# gets e.g. (2224707915776L, 2261363666944L, 4486071582720L, 0)
(dfree,dused,dvirtual,dunprotected) = d.GetSubPageCapacity()

# Misc info
# gets e.g. (4184880, 8, 'Drobo disk pack')
(dtime, doffset, dname) = d.GetSubPageSettings()

# General status
# gets, e.g., ([], 0) 
status = d.GetSubPageStatus()

# How full, as a percentage?
if dvirtual > 0 :
    pfull = 100 * ((dused+1.0)/dvirtual)
else:
    return_UNKNOWN("Firmware too old or drobo empty")

return_OK("%s is %2.2f%% full" % (dname,pfull), 
          "%2.2f;%2.2f;%2.2f;%2.2f" % (togig(dfree),togig(dused),togig(dvirtual),togig(dunprotected)))

